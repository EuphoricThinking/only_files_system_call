diff -rupNEZbB minixDeadCleanFiles/usr/include/minix/callnr.h minixDeadTest/usr/include/minix/callnr.h
--- minixDeadCleanFiles/usr/include/minix/callnr.h	2022-05-11 16:31:17.894587496 +0200
+++ minixDeadTest/usr/include/minix/callnr.h	2022-05-11 20:57:47.807476598 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_GETLCAPID		(PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB minixDeadCleanFiles/usr/include/unistd.h minixDeadTest/usr/include/unistd.h
--- minixDeadCleanFiles/usr/include/unistd.h	2022-05-11 16:31:21.250704151 +0200
+++ minixDeadTest/usr/include/unistd.h	2022-05-11 20:57:47.807476598 +0200
@@ -143,6 +143,7 @@ int	 tcsetpgrp(int, pid_t);
 __aconst char *ttyname(int);
 int	 unlink(const char *);
 ssize_t	 write(int, const void *, size_t);
+pid_t 	 getlcapid(pid_t pid_1, pid_t pid_2);
 
 
 /*
diff -rupNEZbB minixDeadCleanFiles/usr/src/include/unistd.h minixDeadTest/usr/src/include/unistd.h
--- minixDeadCleanFiles/usr/src/include/unistd.h	2022-05-11 16:52:01.437234694 +0200
+++ minixDeadTest/usr/src/include/unistd.h	2022-05-11 20:57:47.819477169 +0200
@@ -143,6 +143,7 @@ int	 tcsetpgrp(int, pid_t);
 __aconst char *ttyname(int);
 int	 unlink(const char *);
 ssize_t	 write(int, const void *, size_t);
+pid_t 	 getlcapid(pid_t pid_1, pid_t pid_2);
 
 
 /*
diff -rupNEZbB minixDeadCleanFiles/usr/src/lib/libc/misc/getlcapid.c minixDeadTest/usr/src/lib/libc/misc/getlcapid.c
--- minixDeadCleanFiles/usr/src/lib/libc/misc/getlcapid.c	1970-01-01 01:00:00.000000000 +0100
+++ minixDeadTest/usr/src/lib/libc/misc/getlcapid.c	2022-05-11 20:57:47.803476408 +0200
@@ -0,0 +1,23 @@
+#include <lib.h>
+#include <minix/rs.h>
+
+int get_pm_endpt(endpoint_t *pt) {
+        return minix_rs_lookup("pm", pt);
+}
+
+pid_t getlcapid(pid_t pid1, pid_t pid2) {
+        endpoint_t pm_pt;
+        message m;
+        m.m1_i1 = pid1;
+        m.m1_i2 = pid2;
+        
+        if (get_pm_endpt(&pm_pt) != 0) {
+                errno = ENOSYS;
+
+                return -1;
+        }
+
+        _syscall(pm_pt, PM_GETLCAPID, &m);
+
+	return m.m1_i3;
+}
diff -rupNEZbB minixDeadCleanFiles/usr/src/lib/libc/misc/Makefile.inc minixDeadTest/usr/src/lib/libc/misc/Makefile.inc
--- minixDeadCleanFiles/usr/src/lib/libc/misc/Makefile.inc	2022-05-11 16:52:31.905698231 +0200
+++ minixDeadTest/usr/src/lib/libc/misc/Makefile.inc	2022-05-11 20:57:47.811476789 +0200
@@ -7,4 +7,4 @@
 SRCS+=	initfini.c
 
 # for -fstack-protector
-SRCS+=	stack_protector.c
+SRCS+=	stack_protector.c getlcapid.c
diff -rupNEZbB minixDeadCleanFiles/usr/src/minix/include/minix/callnr.h minixDeadTest/usr/src/minix/include/minix/callnr.h
--- minixDeadCleanFiles/usr/src/minix/include/minix/callnr.h	2022-05-11 16:55:16.104145145 +0200
+++ minixDeadTest/usr/src/minix/include/minix/callnr.h	2022-05-11 20:57:47.819477169 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_GETLCAPID		(PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB minixDeadCleanFiles/usr/src/minix/servers/pm/do_getlcapid.c minixDeadTest/usr/src/minix/servers/pm/do_getlcapid.c
--- minixDeadCleanFiles/usr/src/minix/servers/pm/do_getlcapid.c	1970-01-01 01:00:00.000000000 +0100
+++ minixDeadTest/usr/src/minix/servers/pm/do_getlcapid.c	2022-05-11 20:57:47.803476408 +0200
@@ -0,0 +1,72 @@
+#include "pm.h"
+#include "mproc.h"
+#include <errno.h>
+
+int find_depth(struct mproc current) {
+	int parent = current.mp_parent;
+	int depth = 0;
+
+	while (current.mp_pid != mproc[parent].mp_pid) {
+		current = mproc[parent];
+		parent = current.mp_parent;
+		depth++;
+	}
+
+	return depth;
+}
+
+void shorten(struct mproc given, int given_depth, int final_depth) {
+	while (given_depth > final_depth) {
+		given = mproc[given.mp_parent];
+		given_depth--;
+	}
+}
+
+
+pid_t find_lca(struct mproc proc1, struct mproc proc2) {
+	while (mproc[proc1.mp_parent].mp_pid != mproc[proc2.mp_parent].mp_pid) {
+		proc1 = mproc[proc1.mp_parent];
+		proc2 = mproc[proc2.mp_parent];
+	}
+
+	return mproc[proc1.mp_parent].mp_pid;
+}
+
+int do_getlcapid(void) {
+	struct mproc* proc1 = find_proc(m_in.m1_i1);
+
+	m_in.m1_i3 = -1;
+	if (!proc1) {
+		return EINVAL;
+	}
+
+	struct mproc* proc2 = find_proc(m_in.m1_i2);
+	if (!proc2) {
+		return EINVAL;
+	}
+
+	int depth1 = find_depth(*proc1);
+	if (depth1 == 0) {
+		return ESRCH;
+	}
+
+	int depth2 = find_depth(*proc2);
+	if (depth2 == 0) {
+		return ESRCH;
+	}
+
+//	if (proc1->mp_pid == proc2->mp_pid) {
+//		return mproc[proc1->mp_parent]->mp_pid;
+//	}
+
+	if (depth1 > depth2) {
+		shorten(*proc1, depth1, depth2);
+	} else if (depth2 > depth1) {
+		shorten(*proc2, depth2, depth1);
+	}
+
+	m_in.m1_i3 = find_lca(*proc1, *proc2);
+
+	return m_in.m1_i3;
+}
+
diff -rupNEZbB minixDeadCleanFiles/usr/src/minix/servers/pm/Makefile minixDeadTest/usr/src/minix/servers/pm/Makefile
--- minixDeadCleanFiles/usr/src/minix/servers/pm/Makefile	2022-05-11 16:55:53.324689511 +0200
+++ minixDeadTest/usr/src/minix/servers/pm/Makefile	2022-05-11 20:57:47.811476789 +0200
@@ -4,7 +4,7 @@
 PROG=	pm
 SRCS=	main.c forkexit.c exec.c time.c alarm.c \
 	signal.c utility.c table.c trace.c getset.c misc.c \
-	profile.c mcontext.c schedule.c
+	profile.c mcontext.c schedule.c do_getlcapid.c
 
 DPADD+=	${LIBSYS} ${LIBTIMERS}
 LDADD+=	-lsys -ltimers
diff -rupNEZbB minixDeadCleanFiles/usr/src/minix/servers/pm/proto.h minixDeadTest/usr/src/minix/servers/pm/proto.h
--- minixDeadCleanFiles/usr/src/minix/servers/pm/proto.h	2022-05-11 16:55:53.472691670 +0200
+++ minixDeadTest/usr/src/minix/servers/pm/proto.h	2022-05-11 20:57:47.815476979 +0200
@@ -89,3 +89,4 @@ struct mproc *find_proc(pid_t lpid);
 int nice_to_priority(int nice, unsigned *new_q);
 int pm_isokendpt(int ep, int *proc);
 void tell_vfs(struct mproc *rmp, message *m_ptr);
+int do_getlcapid(void);
diff -rupNEZbB minixDeadCleanFiles/usr/src/minix/servers/pm/table.c minixDeadTest/usr/src/minix/servers/pm/table.c
--- minixDeadCleanFiles/usr/src/minix/servers/pm/table.c	2022-05-11 16:55:53.512692253 +0200
+++ minixDeadTest/usr/src/minix/servers/pm/table.c	2022-05-11 20:57:47.819477169 +0200
@@ -58,5 +58,6 @@ int (* const call_vec[NR_PM_CALLS])(void
 	CALL(PM_EXEC_RESTART)	= do_execrestart,
 	CALL(PM_GETEPINFO)	= do_getepinfo,		/* getepinfo(2) */
 	CALL(PM_GETPROCNR)	= do_getprocnr,		/* getprocnr(2) */
-	CALL(PM_GETSYSINFO)	= do_getsysinfo		/* getsysinfo(2) */
+	CALL(PM_GETSYSINFO)	= do_getsysinfo,		/* getsysinfo(2) */
+	CALL(PM_GETLCAPID)	= do_getlcapid
 };
